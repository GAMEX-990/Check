'use client';

import React, { useState, useEffect, useCallback } from 'react';
import { useAuthState } from 'react-firebase-hooks/auth';
import { auth, db } from '@/lib/firebase';
import { doc, getDoc } from 'firebase/firestore';
import { signOut } from 'firebase/auth';
import { useRouter } from 'next/navigation';
import { toast } from 'sonner';
import { getFingerprint } from '@/utils/getFingerprint';
import { ClassData } from '@/types/classDetailTypes';
import ClassSection from '@/components/UserInterface/ClassSection';
import Loader from '@/components/Loader/Loader';
import AttendanceSummaryModal from '@/components/AttendanceSummary/AttendanceSummaryModal';
import { Menu } from 'lucide-react';

export default function DashboardPage() {
  const [currectPang, setCurrectPang] = useState<'myclass' | 'class' | 'view'>('myclass');
  const [selectedClass, setSelectedClass] = useState<ClassData | null>(null);
  const [user, loading] = useAuthState(auth); // ‡∏•‡∏ö error ‡∏≠‡∏≠‡∏Å
  const [allowed, setAllowed] = useState<boolean | null>(null);
  const router = useRouter();
  const [showWelcome, setShowWelcome] = useState(false);
  const [dontShowAgain, setDontShowAgain] = useState(false);
  const WELCOME_KEY = 'welcome_dont_show_again_v1';


  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÉ‡∏ä‡πâ useCallback ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô re-render
  const performSecureSignOut = useCallback(async (): Promise<void> => {
    try {
      await signOut(auth);
      router.replace('/login');
    } catch {
      // ‡πÉ‡∏ä‡πâ underscore ‡πÅ‡∏ó‡∏ô error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
      window.location.href = '/login';
    }
  }, [router]);

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏¢‡πâ‡∏≤‡∏¢ verifyDeviceAccess ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô separate function
  const verifyDeviceAccess = useCallback(async (userEmail: string): Promise<boolean> => {
    try {
      const currentFingerprint = await getFingerprint();
      if (!currentFingerprint) {
        return true;  // ‡πÑ‡∏°‡πà‡∏°‡∏µ fingerprint ‡∏Å‡πá‡∏ú‡πà‡∏≤‡∏ô
      }

      const deviceDocRef = doc(db, 'deviceFingerprints', currentFingerprint);
      const deviceSnap = await getDoc(deviceDocRef);

      if (!deviceSnap.exists()) {
        return true;
      }

      const data = deviceSnap.data();
      const storedEmail = data.email;
      const expireAt = data.expireAt;

      if (expireAt && expireAt.toMillis() < Date.now()) {
        return false;
      }

      if (storedEmail !== userEmail) {
        return false;
      }

      return true;
    } catch {
      // ‡πÉ‡∏ä‡πâ underscore ‡πÅ‡∏ó‡∏ô error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
      return false;
    }
  }, []);

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° dependencies ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  useEffect(() => {
    if (loading) return;

    if (!user) {
      setAllowed(false);
      router.replace('/login');
      return;
    }

    if (!user.email) {
      setAllowed(false);
      performSecureSignOut();
      return;
    }

    verifyDeviceAccess(user.email).then((result) => {
      if (result) {
        setAllowed(true);
      } else {
        toast.error('‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö');
        setAllowed(false);
        setTimeout(() => {
          performSecureSignOut();
        }, 2000);
      }
    }).catch(() => {
      // ‡πÉ‡∏ä‡πâ underscore ‡πÅ‡∏ó‡∏ô err ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
      toast.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå');
      setAllowed(false);
      performSecureSignOut();
    });
  }, [loading, user, router, performSecureSignOut, verifyDeviceAccess]);

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° proper type annotation
  const handleClassChange = useCallback((newClassData: ClassData): void => {
    setSelectedClass(newClassData);
  }, []);

  const handleClassSelect = useCallback((classData: ClassData | null): void => {
    setSelectedClass(classData);
  }, []);

  const handlePageChange = useCallback((page: 'myclass' | 'class' | 'view'): void => {
    setCurrectPang(page);
  }, []);

  // === FIRST-VISIT POPUP (per browser) ===
  const closeWelcome = useCallback(() => {
    try {
      if (dontShowAgain) {
        localStorage.setItem(WELCOME_KEY, 'hide');
      }
    } catch { }
    setShowWelcome(false);
  }, [dontShowAgain]);

  useEffect(() => {
    if (allowed === true) {
      try {
        const pref = localStorage.getItem(WELCOME_KEY);
        setShowWelcome(pref !== 'hide');
      } catch {
        // ‡∏ñ‡πâ‡∏≤ localStorage ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô
        setShowWelcome(true);
      }
    }
  }, [allowed]);


  if (loading || allowed === null) {
    return (
      <div className="absolute inset-0 bg-white/70 flex items-center justify-center">
        <div className="text-center">
          <Loader />
          <p className="mt-4 text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á...</p>
        </div>
      </div>
    );
  }

  if (allowed === false) {
    return (
      <div className="absolute inset-0 bg-red-50 flex items-center justify-center">
        <div className="text-center p-6 bg-white rounded-lg shadow-lg max-w-md mx-4">
          <div className="text-red-500 text-6xl mb-4">üö´</div>
          <h2 className="text-xl font-bold text-red-600 mb-2">‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
          <p className="text-gray-600 mb-2">‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏≠‡∏∑‡πà‡∏ô</p>
          <p className="text-sm text-gray-500">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ</p>
        </div>
      </div>
    );
  }


  const isClassOwner = selectedClass && user ? selectedClass.owner_email === user.email : false;

  return (
    <div>
      <div className="flex justify-center">
        <div className="flex flex-col gap-y-4 md:h-140 h-90">
          <div className="flex items-center justify-center">
            <ClassSection
              onPageChange={handlePageChange}
              onClassSelect={handleClassSelect}
              onClassChange={handleClassChange}
            />
          </div>
          <div className="flex max-h-fit items-center justify-center">
            {currectPang === 'view' && selectedClass && (
              <div>
                <AttendanceSummaryModal classData={selectedClass} isOwner={isClassOwner} />
              </div>
            )}
          </div>
        </div>
      </div>

      {showWelcome && (
        <div className="fixed inset-0 z-[9999] bg-black/40 flex items-center justify-center">
          <div className="bg-white rounded-2xl shadow-xl w-[90%] max-w-md p-6">
            <h2 className="text-xl font-bold text-purple-700">‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö üëã</h2>
            <p className="mt-2 text-gray-600">
              ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å! ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Ñ‡∏•‡∏≤‡∏™‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ
            </p>

            <div className="mt-4 space-y-2 text-sm text-gray-500 md:hidden">
              <p className='flex items-center'>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚Äú<Menu size={20} className='pt-1' />‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™</p>
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúMyClass‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á</p>
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúClass‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™</p>
            </div>
            <div className="mt-4 space-y-2 text-sm text-gray-500 hidden md:block">
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúScan QR‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô QR ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏•‡∏≤‡∏™</p>
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúAdd a class‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</p>
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúMyClass‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á</p>
              <p>‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö ‚ÄúClass‚Äù ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏•‡∏≤‡∏™‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°</p>
            </div>

            {/* ‚úÖ Checkbox "‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å" */}
            <label className="mt-4 flex items-center gap-2 text-sm text-gray-600">
              <input
                type="checkbox"
                className="h-4 w-4"
                checked={dontShowAgain}
                onChange={(e) => setDontShowAgain(e.target.checked)}
              />
              ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏µ‡∏Å
            </label>

            <div className="mt-6 flex items-center justify-end gap-3">
              <button
                onClick={closeWelcome}
                className="px-4 py-2 rounded-lg bg-purple-600 text-white hover:bg-purple-700 transition"
              >
                ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
              </button>
            </div>
          </div>
        </div>
      )}

    </div>
  );
}